import { User, Event, Participation } from './types';
import { subDays, addDays } from 'date-fns';
// --- USERS ---
export const MOCK_USERS: User[] = [
  {
    id: 'user-1',
    email: 'admin@admin.com',
    name: 'Admin User',
    role: 'ADMIN',
    points: 100,
    whatsapp: '+10000000000',
    city: 'Cloud City',
    district: 'Central',
    positions: ['Attacking Midfielder', 'Striker'],
    birthDate: '1990-01-01T00:00:00.000Z',
    favoriteTeam: 'Cloudflare FC',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: 'user-2',
    email: 'coach@coach.com',
    name: 'Coach Carter',
    role: 'COACH',
    points: 85,
    whatsapp: '+11111111111',
    city: 'Edgeville',
    district: 'North',
    positions: ['Defensive Midfielder'],
    birthDate: '1985-05-15T00:00:00.000Z',
    favoriteTeam: 'The Workers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: 'user-3',
    email: 'player1@player.com',
    name: 'Alice Johnson',
    role: 'USER',
    points: 120,
    positions: ['Striker'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: 'user-4',
    email: 'player2@player.com',
    name: 'Bob Williams',
    role: 'USER',
    points: 95,
    positions: ['Goalkeeper'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: 'user-5',
    email: 'player3@player.com',
    name: 'Charlie Brown',
    role: 'USER',
    points: 70,
    positions: ['Centre-Back', 'Full-Back'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: 'user-6',
    email: 'player4@player.com',
    name: 'Diana Prince',
    role: 'USER',
    points: 110,
    positions: ['Winger'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];
// --- EVENTS ---
export const MOCK_EVENTS: Event[] = [
  {
    id: 'event-1',
    date: addDays(new Date(), 7).toISOString(),
    time: '19:00',
    location: 'Central Park Pitch',
    teamALimit: 10,
    teamBLimit: 10,
    shortCode: 'CP1900',
    masterId: 'user-2', // Coach Carter
    master: MOCK_USERS[1],
    participations: [], // Will be populated below
    createdAt: new Date().toISOString(),
  },
  {
    id: 'event-2',
    date: subDays(new Date(), 3).toISOString(),
    time: '18:30',
    location: 'Riverside Arena',
    teamALimit: 8,
    teamBLimit: 8,
    shortCode: 'RA1830',
    masterId: 'user-1', // Admin User
    master: MOCK_USERS[0],
    participations: [], // Will be populated below
    createdAt: new Date().toISOString(),
  },
];
// --- PARTICIPATIONS ---
export const MOCK_PARTICIPATIONS: Participation[] = [
  // Event 1 Participations
  {
    id: 'p-1-1',
    userId: 'user-1',
    eventId: 'event-1',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_A',
    positionOrder: 1,
    assignedByCoach: false,
    user: MOCK_USERS[0],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-1-3',
    userId: 'user-3',
    eventId: 'event-1',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_A',
    positionOrder: 2,
    assignedByCoach: false,
    user: MOCK_USERS[2],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-1-4',
    userId: 'user-4',
    eventId: 'event-1',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_B',
    positionOrder: 1,
    assignedByCoach: false,
    user: MOCK_USERS[3],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-1-5',
    userId: 'user-5',
    eventId: 'event-1',
    status: 'MAYBE',
    teamPreference: 'TEAM_A',
    positionOrder: 3,
    assignedByCoach: false,
    user: MOCK_USERS[4],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-1-6',
    userId: 'user-6',
    eventId: 'event-1',
    status: 'CANT',
    teamPreference: 'TEAM_B',
    positionOrder: 2,
    assignedByCoach: false,
    user: MOCK_USERS[5],
    createdAt: new Date().toISOString(),
  },
  // Event 2 Participations (Past Event)
  {
    id: 'p-2-2',
    userId: 'user-2',
    eventId: 'event-2',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_A',
    positionOrder: 1,
    assignedByCoach: true,
    user: MOCK_USERS[1],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-2-3',
    userId: 'user-3',
    eventId: 'event-2',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_B',
    positionOrder: 1,
    assignedByCoach: false,
    user: MOCK_USERS[2],
    createdAt: new Date().toISOString(),
  },
  {
    id: 'p-2-6',
    userId: 'user-6',
    eventId: 'event-2',
    status: 'DEFINITELY',
    teamPreference: 'TEAM_A',
    positionOrder: 2,
    assignedByCoach: false,
    user: MOCK_USERS[5],
    createdAt: new Date().toISOString(),
  },
];
// Populate event participations
MOCK_EVENTS.forEach(event => {
  event.participations = MOCK_PARTICIPATIONS.filter(p => p.eventId === event.id);
});